<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <context:component-scan base-package="inventory"/>
    <!-- Kich hoat 1 so annotation can thiet: validate, restcontroller, ... -->
    <mvc:annotation-driven  />

    <mvc:resources mapping="/static/**" location="/static/"/>


    <mvc:resources
            location="/static/images/" mapping="/upload/**"></mvc:resources>


    <!-- Chen file jsp -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="1" />
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>

    <!-- Quan li database collection pool -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
          <!--class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->

        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="jdbc:mysql://localhost:3306/inventory_management" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- Session Factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
      <property name="packagesToScan" value="java"/>
    <property name="hibernateProperties"
              value="classpath:hibernate.properties">
    </property>
        <property name="mappingResources">
            <list>
                <value>Auth.hbm.xml</value>
                <value>Category.hbm.xml</value>
                <value>History.hbm.xml</value>
                <value>Invoice.hbm.xml</value>
                <value>Menu.hbm.xml</value>
                <value>ProductInfo.hbm.xml</value>
                <value>ProductInStock.hbm.xml</value>
                <value>Role.hbm.xml</value>
                <value>UserRole.hbm.xml</value>
                <value>Users.hbm.xml</value>
<!--                <value>inventory/model/mapping/Users.hbm.xml</value>-->
<!--                <value>Customer.hbm.xml</value>-->
                <value>ProductDetail.hbm.xml</value>
                <value>ProductDetailPt.hbm.xml</value>
                <value>Supplier.hbm.xml</value>
                <value>Vat.hbm.xml</value>
                <value>VatDetail.hbm.xml</value>
                <value>ProductStatusList.hbm.xml</value>
                <value>ProductStatusDetail.hbm.xml</value>
                <value>InvoiceTemp.hbm.xml</value>
                <value>Shelf.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- Scanning Component -->
    <context:component-scan base-package="inventory"></context:component-scan>
    <!-- trao quyen quan ly cac session cho spring -->


    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven
            transaction-manager="transactionManager" />

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="order" value="0"></property>
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.tiles3.TilesView">
        </property>
    </bean>

    <bean id="tilesConfigure"
          class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/message/message.properties"></property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="268435456" />
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/login" />
            <mvc:exclude-mapping path="/processLogin" />
            <mvc:exclude-mapping path="/resources/**" />
            <mvc:exclude-mapping path="/upload/**"/>
            <bean class="inventory.security.FilterSystem"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>
